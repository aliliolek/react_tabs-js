{"version":3,"sources":["components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","setSelectedTabId","selectedTab","find","tab","id","className","map","index","title","content","classNames","href","onClick","wrapperForClick","App","useState","ReactDOM","render","document","getElementById"],"mappings":"8NAEaA,EAAO,SAAC,GACoB,IADlBC,EACiB,EADjBA,KAAMC,EACW,EADXA,cACTC,GAAoB,EAAtCC,iBAAsC,EAApBD,eACZE,EAAcJ,EAAKK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAON,MAAkBD,EAAK,GAQvE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKQ,UAAU,gBAAf,SACE,6BACGR,EAAKS,KAAI,WAAyBC,GAAzB,IAAGH,EAAH,EAAGA,GAAII,EAAP,EAAOA,MAAOC,EAAd,EAAcA,QAAd,OACR,oBACE,UAAQ,MACRJ,UAAWK,IAAW,CAAE,YAAaN,IAAOH,EAAYG,KAF1D,SAKE,mBACEO,KAAI,WAAMP,GACV,UAAQ,UACRQ,QAAS,YAnBC,SAAC,GAA4B,IAA1BR,EAAyB,EAAzBA,GAAII,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAChCR,EAAYG,KAAOA,GACrBL,EAAc,CAAEK,KAAII,QAAOC,YAkBfI,CAAgB,CAAET,KAAII,QAAOC,aAJjC,SAOGD,KATEJ,UAeb,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYQ,cC9BRZ,EAAO,CAClB,CAAEO,GAAI,QAASI,MAAO,QAASC,QAAS,eACxC,CAAEL,GAAI,QAASI,MAAO,QAASC,QAAS,eACxC,CAAEL,GAAI,QAASI,MAAO,QAASC,QAAS,gBAG7BK,EAAM,WACjB,MAA0CC,mBAASlB,EAAK,GAAGO,IAA3D,mBAAON,EAAP,KAAsBE,EAAtB,KAUMC,EAAcJ,EAAKK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAON,MAAkBD,EAAK,GAEvE,OACE,sBAAKQ,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBJ,EAAYO,SAGlC,cAAC,EAAD,CACEV,cAAeA,EACfE,iBAAkBA,EAClBD,cAnBgB,SAAC,GAA4B,IAA1BK,EAAyB,EAAzBA,GAAyB,EAArBI,MAAqB,EAAdC,QAC9BZ,EAAKK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAON,KAC9BE,EAAiBI,GAEjBJ,EAAiBH,EAAK,GAAGO,KAgBvBP,KAAMA,QChCdmB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.72d6297f.chunk.js","sourcesContent":["import classNames from 'classnames';\n\nexport const Tabs = ({ tabs, selectedTabId,\n  setSelectedTabId, onTabSelected }) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const wrapperForClick = ({ id, title, content }) => {\n    if (selectedTab.id !== id) {\n      onTabSelected({ id, title, content });\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(({ id, title, content }, index) => (\n            <li\n              data-cy=\"Tab\"\n              className={classNames({ 'is-active': id === selectedTab.id })}\n              key={id}\n            >\n              <a\n                href={`#${id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  wrapperForClick({ id, title, content });\n                }}\n              >\n                {title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const onTabSelected = ({ id, title, content }) => {\n    if (tabs.find(tab => tab.id === selectedTabId)) {\n      setSelectedTabId(id);\n    } else {\n      setSelectedTabId(tabs[0].id);\n    }\n  };\n\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        selectedTabId={selectedTabId}\n        setSelectedTabId={setSelectedTabId}\n        onTabSelected={onTabSelected}\n        tabs={tabs}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}